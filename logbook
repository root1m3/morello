
Morello LOG BOOK
================

13 Feb
==================================================================================================================
Please provide a high-level overview of your activities during the programme. (Max 6 bullet points; max 600 words total)

Installing CheriBSD and dev toolchain.
    This apparently straightforward activity took considerable time with many frustrated attempts until the operating system finally installed and boot correctly.
    The origin of the problem was simple: having a keyboard plugged on USB port.

Adapt devops scripts (made for debian Linux) to freeBSD
    Some FreeBSD command-line tools include programs using different interface (bourne) from their version shipped on linux distributions. e.g. (sed).
    Our codebase include scripts for different tasks: configure sources (pre-compilation step) and devops pipeline (deployment).

Build and/or install dependencies: secp256k1
    Our C++ sources didn't need to be adapted or adjusted in order to be compiled. Our only dependency, the cryptography library secp256k1, compiled without issues.

Network card issue.
    The integrated ethernet interface stopped working after disconnecting the cable during some networking reorg.
    It wouldn't recover from it, even after reinstalling the OS.
    A brand new card was installed, but we couldn't complete the task of compiling and installing a driver for it given frustrating compilation errors.
    We found a workaround using USB Tethering via GSM to recover network connectivity.

Design of a use case where sensitive data is compromised.
    Time was spent to study and understand the low-level spec about capabilities and compartmentalization (c18n), along with current c18n models that are under active research and development.
    We studied a c18n model based on the dynamic linker, where shared libraries are kept in compartments with a trampoline interface.
    However this model is not suitable for our purpose because we need to isolate with more granularity.
    We Figured out which features we would need a c18n scheme to have in order to seamlessly fit into our codebase design:
    A model of c18n where we can use 'colors' (32, 64 or 128 bits integers) to mark worker threads. Colored threads would then, in general, be able to access
    any capability, but if a particular capability had a color then such color should match the thread color, otherwise an exception would be raised by the hardware.

Implement use case.
    Unfortunately we couldn't achieve in the allocated time a practical implementation for our intended compartmentalization model, given the apparent impossibility
    of assigning 'colours' to different capabilities that are scattered in heap memory, plus spawning coloured worker threads which are restricted from accessing any other color.
    We can only speculate whether this model is interesting for a potential general purpose support in the CHERI specification.
    A possible variation of the spec that would make this podel possible would include:
    1.- Thread Color
        Using a special register to store thread color: There exist a CompartmentID register with an unclear purpose, not sufficiently documented (cid).
        Let's assume cid is such special register storing the desired thread color.
        Once cid is set for any new thread it would become read-only for such thread.
    2.- Capability color. A capability with a new special value for its otype field would make the coprocessor use a new circuit.
        Any attemp of dereferencing any capability would make the coprocessor raise an exception if:
            1.- otype is the key to enable this circuit.
            2.- the address field (64 bit) doesn't match the value stored in the cid register.

    This apparently simple support would enable compartments in our codebase with the adition of a few lines of code:
        1.- worker thread spawn -> load cid with the assigned color (we'd use a hash of the user public key the thread is working for)
        2.- privacy wallets would be created using capabilities with each user's public key hash as their encoded color.
    Any failure or glitch in the algorithm of the worker thread that could allow an attacker to gain access to others wallets would not compromise them. 



12 Feb
==================================================================================================================

Working on final report.

Project Goal : what were you hoping to achieve?

    We wanted to assess the incorporation of secure hardware as part of our products security-critical features.
    We also want to provide as much valuable feedback as possible to the ongoing development of CHERI/Morello.

    Our backend software is exposed to the naked internet and is subject to continuous attack attempts, where any
    malicious adversary could eventually exploit any possible software vulnerability (either already existing or caused by a future flaw)
    gaining ilegitimate access to the memory addresses containing user sensitive information e.g. cryptocurrency secret keys, private pictures, or electronic health records.
    Once reached this state, Cheri would be able to stop the offender before user's secrets are compromised.
    Enhanced protection increases the user's confidence.
    As part of the assessment we wanted to achieve a proof of concept where an adversary would be able to compromise user's secrets.  (We would deliberately introduce a bug in the software allowing the attack).
    Running this scenario on both the base architecture and the morello arch we expect to find a successful/frustrated attack respectively.




10 Feb
==================================================================================================================


https://git.morello-project.org/morello/android/vendor/arm/morello-examples/-/blob/633465072c41dea28cf085cf40da41381bbef587/compartment-demo/cheribsd_make.sh


Compiler explorer morello:
https://cheri-compiler-explorer.cl.cam.ac.uk/z/xoerWP




9 Feb
==================================================================================================================

https://github.com/capablevms/CHERI-ELF-comp




8 Feb
==================================================================================================================

https://developer.arm.com/documentation/den0132/0100/Overview/ObjectType-and-Sealing-capabilities?lang=en
https://developer.arm.com/documentation/den0132/0100/Overview/Capability-structure?lang=en

https://www.cl.cam.ac.uk/research/security/ctsrd/pdfs/2019tc-cheri-concentrate.pdf

The Morello Capability format is similar but not identical to the CHERI-concentrate format.

A Capability value comprises the following fields:
• Value: 64 bits.
• Bounds: 87 bits.
• Flags: 8 bits.
• ObjectType: 15 bits.
• Permissions: 16 bits.
• Tag: 1 bit.
• Global: 1 bit.
• Executive: 1 bit.

https://www.cl.cam.ac.uk/research/security/ctsrd/
Clean Slate Trustworthy Secure Research and Development (CTSRD - pronounced "custard") is a joint research project between SRI International's Computer Science Laboratory and the University of Cambridge Computer Laboratory, supported by DARPA (part of the DARPA CRASH, MRC, and SSITH programmes), Google, and Arm


https://git.morello-project.org/morello/android/vendor/arm/morello-examples/-/tree/morello/mainline/compartment-demo

post:  https://app.slack.com
I am trying to figure out a in-process/user-space c18n scheme for the Morello board where the main execution thread would set some environmental capability for which a subsequently spawned worker thread  would have access to all caps except a number of them.
The program logic would create a number of general-accessible caps plus a number of caps that can only be accessed by either a supervisor thread or a thread 'marked' with a particular number(cid - 64 bits ideally).
I've read about a potential confused-deputy flaw in this scheme, but I think in my use-case it is not a concern.I am reading all possible docs/slides/code I find about Enclaves, TEE, trampoline, seal/unseal, otype, PCC/DCC, executive/restricted modes. CCall/CIvoke.. but it is taking a lot of time to get into the straight line of action.
I'd appreciate any suggestions, ideas or pointers to example code that could help me achieve my purpose of letting a thread access every cap except a few of them which are marked with an arbitrary integer.Thanks
Marcos






7 Feb
==================================================================================================================

https://git.morello-project.org
https://github.com/CTSRD-CHERI/
 

https://github.com/CTSRD-CHERI/cheri-c-programming/releases/tag/UCAM-CL-TR-947

https://www.cl.cam.ac.uk/research/security/ctsrd/pdfs/20151207-law2015-cheri-arch-release.pdf


6 Feb
==================================================================================================================

https://git.morello-project.org/morello/android/vendor/arm/morello-examples/-/tree/morello/mainline/compartment-demo

https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-887.pdf

git clone https://git.morello-project.org/morello/android/vendor/arm/morello-examples.git

CHERITech 22 (#cheritech22) CHERI Technical Workshop 2022 Tue Sep 6th 2022 10:00 - 18:00
King's College London, Edmond J. Safra Lecture Theatre, King's Building, Strand Campus 
https://soft-dev.org/events/cheritech22/


Enclaves - Jennifer Jackson
https://soft-dev.org/events/cheritech22/slides/Jackson.pdf

asm ("ldr x9, [x29, #32]");
x29            0xfffffff7ff80      281474976186240
c29            0xdc5d40003ffdbfff0000fffffff7ff80 0xfffffff7ff80 [rwRW,0xffffbff80000-0xfffffff80000]


Morello ASM:
https://developer.arm.com/documentation/ddi0606/latest


ARM glossary of acronyms: https://developer.arm.com/documentation/105565/0100




5 Feb
==================================================================================================================

http://www.ethernut.de/en/documents/arm-inline-asm.html
https://developer.arm.com/documentation/dui0068/b/ARM-Instruction-Reference
https://sourceware.org/binutils/docs/as/ARM-Directives.html

CompartOS: CHERI Compartmentalization for Embedded Systems
https://arxiv.org/pdf/2206.02852.pdf


https://github.com/CTSRD-CHERI/cherios

Capability registers

The Morello architecture introduces the term capability register to define a register that can hold a capability. Capability registers are 129 bits. The general-purpose registers are extended to hold capabilities. Capability registers have the following access views:

    129-bit when referenced as Cn [C0 to C30]
    64-bit when referenced as Xn [X0 to X30]
    32-bit when referenced as Wn [W0 to W30]


https://accu.org/journals/overload/13/68/goodliffe_281/


“The single biggest problem in communication is the illusion that it has taken place.”
—George Bernard Shaw


https://developer.arm.com/documentation/100067/0612/armclang-Integrated-Assembler/Syntax-of-assembly-files-for-integrated-assembler?lang=en

gdb registers
-------------
gdb ./a.out
b main
r
info registers
x0             0xffffbff7f820      281473902442528
x1             0xfffffff7ff50      281474976186192
x2             0xfffffff7ff60      281474976186208
x3             0xfffffff7ff78      281474976186232
x4             0xfffffff7ff7c      281474976186236
x5             0x20                32
x6             0xfffffff7dbd0      281474976177104
x7             0xfffffff7de1c      281474976177692
x8             0x1                 1
x9             0x0                 0
x10            0xe0                224
x11            0x427               1063
x12            0x0                 0
x13            0x10                16
x14            0x10                16
x15            0x0                 0
x16            0x405265e5          1079141861
x17            0xfffffff7ff80      281474976186240
x18            0xffffffffffffffff  -1
x19            0x401573f9          1075147769
x20            0xffffbff7f840      281473902442560
x21            0xffffbff7f820      281473902442528
x22            0x1                 1
x23            0x0                 0
x24            0x0                 0
x25            0x0                 0
x26            0x0                 0
x27            0x0                 0
x28            0x0                 0
x29            0xfffffff7ff80      281474976186240
x30            0x113ba9            1129385
sp             0xfffffff7ff10      0xfffffff7ff10
pc             0x114304            0x114304 <main(int, char**)+80>
cpsr           0x84000200          [ EL=0 D BTYPE=0 C64 N ]
fpsr           0x0                 [ ]
fpcr           0x0                 [ RMode=0 ]
c0             0xdc5d40007840f8200000ffffbff7f820 0xffffbff7f820 [rwRW,0xffffbff7f820-0xffffbff7f840]
c1             0xdc5d40007f60ff500000fffffff7ff50 0xfffffff7ff50 [rwRW,0xfffffff7ff50-0xfffffff7ff60]
c2             0xdc5d40007f70ff600000fffffff7ff60 0xfffffff7ff60 [rwRW,0xfffffff7ff60-0xfffffff7ff70]
c3             0xdc5d40007f7cff780000fffffff7ff78 0xfffffff7ff78 [rwRW,0xfffffff7ff78-0xfffffff7ff7c]
c4             0xdc5d40007f80ff7c0000fffffff7ff7c 0xfffffff7ff7c [rwRW,0xfffffff7ff7c-0xfffffff7ff80]
c5             0x20                0x20
c6             0xdc5d40005be0dbd00000fffffff7dbd0 0xfffffff7dbd0 [rwRW,0xfffffff7dbd0-0xfffffff7dbe0]
c7             0xdc5d40005e1dde1c0000fffffff7de1c 0xfffffff7de1c [rwRW,0xfffffff7de1c-0xfffffff7de1d]
c8             0x1                 0x1
c9             0x0                 0x0
c10            0xe0                0xe0
c11            0x427               0x427
c12            0x0                 0x0
c13            0x10                0x10
c14            0x10                0x10
c15            0x0                 0x0
c16            0xb05fc000a1563c8700000000405265e5 0x405265e5 <atexit> [rxRE,0x403c8000-0x40a15000] (sentry)
c17            0xdc5d40003ffdbfff0000fffffff7ff80 0xfffffff7ff80 [rwRW,0xffffbff80000-0xfffffff80000]
c18            0xffffffffffffffff  0xffffffffffffffff
c19            0xb05dc0008e473a0300000000401573f9 0x401573f9 <rtld_nop_exit> [rxRE,0x4013a000-0x4018e400] (sentry)
c20            0xdc5d40007950f8400000ffffbff7f840 0xffffbff7f840 [rwRW,0xffffbff7f840-0xffffbff7f950]
c21            0xdc5d40007840f8200000ffffbff7f820 0xffffbff7f820 [rwRW,0xffffbff7f820-0xffffbff7f840]
c22            0x1                 0x1
c23            0x0                 0x0
c24            0x0                 0x0
c25            0x0                 0x0
c26            0x0                 0x0
c27            0x0                 0x0
c28            0x0                 0x0
c29            0xdc5d40003ffdbfff0000fffffff7ff80 0xfffffff7ff80 [rwRW,0xffffbff80000-0xfffffff80000]
c30            0xb05dc000b47700040000000000113ba9 0x113ba9 <_start+184> [rxRE,0x100000-0x13a380] (sentry)
csp            0xdc5d40003ffdbfff0000fffffff7ff10 0xfffffff7ff10 [rwRW,0xffffbff80000-0xfffffff80000]
pcc            0xb05dc000347700040000000000114304 0x114304 <main(int, char**)+80> [rxRE,0x100000-0x13a380]
ddc            0x0                 0x0
ctpidr         0xdc5d4000351fa0470000000040a7a050 0x40a7a050 [rwRW,0x40a7a040-0x40a7f518]
rcsp           0x0                 0x0
rddc           0x0                 0x0
rctpidr        0x0                 0x0
cid            0x0                 0x0
cctlr          <unavailable>

https://blog.acolyer.org/2019/05/28/cheri-abi/

Data Compartmentalization using CHERI Hybrid
https://soft-dev.org/events/cheritech22/slides/Lascu.pdf
https://github.com/capablevms/CHERI-ELF-comp
https://www.morello-project.org/capinfo



ARM Assembly Instructions:
https://developer.arm.com/documentation/dui0552/a/the-cortex-m3-instruction-set/instruction-set-summary



4 Feb
==================================================================================================================

https://www.morello-project.org/resources/cheriseed-port-effortlessly-to-cheri/
https://git.morello-project.org/morello/musl-libc/-/tree/cheriseed

https://git.morello-project.org/morello/musl-libc/-/blob/morello/master/src/malloc/lite_malloc.c



			void *mem = __mmap(0, req, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0);
			if (mem == MAP_FAILED) {
				UNLOCK(lock);
				return 0;
			}

#ifdef __CHERI_PURE_CAPABILITY__
			/* TODO: Remove after mmap implementation. */
			mem = __builtin_cheri_bounds_set(mem, req);
			mem = __builtin_cheri_perms_and(mem, MUSL_CAP_PROT_MALLOC);
#endif
			if (!new_area) {
				UNLOCK(lock);
				return mem;
			}


Arm C Language Extensions
https://developer.arm.com/documentation/101028/latest

/usr/include/cheri/cherireg.h
The kernel snags one of the software-defined permissions for the purposes of authorising system calls from $pcc

/usr/include/machine/cherireg.h
#define CHERI_PERM_GLOBAL                       (1 << 0)        /* 0x00000001 */
#define CHERI_PERM_EXECUTIVE                    (1 << 1)        /* 0x00000002 */
#define CHERI_PERM_SW0                          (1 << 2)        /* 0x00000004 */
#define CHERI_PERM_SW1                          (1 << 3)        /* 0x00000008 */
#define CHERI_PERM_SW2                          (1 << 4)        /* 0x00000010 */
#define CHERI_PERM_SW3                          (1 << 5)        /* 0x00000020 */
#define CHERI_PERM_MUTABLE_LOAD                 (1 << 6)        /* 0x00000040 */
#define CHERI_PERM_COMPARTMENT_ID               (1 << 7)        /* 0x00000080 */
#define CHERI_PERM_BRANCH_SEALED_PAIR           (1 << 8)        /* 0x00000100 */
#define CHERI_PERM_INVOKE                       CHERI_PERM_BRANCH_SEALED_PAIR
#define CHERI_PERM_SYSTEM                       (1 << 9)        /* 0x00000200 */
#define CHERI_PERM_SYSTEM_REGS                  CHERI_PERM_SYSTEM
#define CHERI_PERM_UNSEAL                       (1 << 10)       /* 0x00000400 */
#define CHERI_PERM_SEAL                         (1 << 11)       /* 0x00000800 */
#define CHERI_PERM_STORE_LOCAL_CAP              (1 << 12)       /* 0x00001000 */
#define CHERI_PERM_STORE_CAP                    (1 << 13)       /* 0x00002000 */
#define CHERI_PERM_LOAD_CAP                     (1 << 14)       /* 0x00004000 */
#define CHERI_PERM_EXECUTE                      (1 << 15)       /* 0x00008000 */
#define CHERI_PERM_STORE                        (1 << 16)       /* 0x00010000 */
#define CHERI_PERM_LOAD                         (1 << 17)       /* 0x00020000 */

/*
 * The CHERI object-type space is split between userspace and kernel,
 * permitting kernel object references to be delegated to userspace (if
 * desired).  Currently, we provide 13 bits of namespace to each, with the top
 * bit set for kernel object types, but it is easy to imagine other splits.
 * User and kernel software should be written so as to not place assumptions
 * about the specific values used here, as they may change.
 *
 * On Morello otype 0 is unsealed, and 1-3 are reserved.
 */
#define CHERI_OTYPE_BITS        (14)
#define CHERI_OTYPE_USER_MIN    (4)
#define CHERI_OTYPE_USER_MAX    ((1 << (CHERI_OTYPE_BITS - 1)) - 1)
#define CHERI_OTYPE_KERN_MIN    (1 << (CHERI_OTYPE_BITS - 1))
#define CHERI_OTYPE_KERN_MAX    ((1 << CHERI_OTYPE_BITS) - 1)
#define CHERI_OTYPE_KERN_FLAG   (1 << (CHERI_OTYPE_BITS - 1))
#define CHERI_OTYPE_ISKERN(x)   (((x) & CHERI_OTYPE_KERN_FLAG) != 0)
#define CHERI_OTYPE_ISUSER(x)   (!(CHERI_OTYPE_ISKERN(x)))
 
 On Morello otype 0 is unsealed, and 1-3 are reserved.

https://cnlelema.github.io/memo/en/cheri/cheri-domain/cheri-seal/
An alternative architecture would have been one with implicit* unsealing, where a sealed capability could be dereferenced without explicitly unsealing it first, provided that the subsystem attempting the dereference had some kind of ambient authority that permitted it to dereference sealed capabilities of that type. This ambient authority could have taken the form of a protection ring or the otype field of PCC.








3 Feb
==================================================================================================================

CheriABI Showcase
https://github.com/CTSRD-CHERI/cheri-exercises/tree/master/src/exercises/cheriabi

cd /root
git clone https://github.com/CTSRD-CHERI/llvm-project.git

malloc

trying to compile:   register int counter asm("PCC");


https://www.cl.cam.ac.uk/~pes20/morello-proofs-esop2022.pdf

Registers: 
Arm® Architecture Reference Manual Supplement Morello for A-profile Architecture
https://developer.arm.com/documentation/ddi0606/latest




2 Feb
==================================================================================================================

realtek: mission: install drivers
    clone cheribsd src in /usr/src
    checkout 
    
jobs: sysctl hw.model hw.machine hw.ncpu




https://github.com/CTSRD-CHERI/cheri-c-programming/releases/tag/draft-20230201-e31e62bb3d34658e1adcfd0854de52a8cdc18a35

https://developer.arm.com/documentation/den0133/0100/Morello-prototype-architecture/Pointers-and-capabilities

Arm® Architecture Reference Manual Supplement Morello for A-profile Architecture
https://developer.arm.com/documentation/ddi0606/latest

https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-951.pdf





1 Feb
==================================================================================================================

Paper: CompartOS - Hessam Almatary - Nov 2022
https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-976.pdf

   Embedded systems
   Trampoline switch
   libdl - c18n


CHERI: A Hybrid Capability-System Architecture for Scalable Software Compartmentalization
https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7163016



31 jan
==================================================================================================================
root@cheripleb:~ # zstd test_zstd 
zstd: error 11 : Allocation error : not enough memory

ack: pkg64 install p5-ack


pciconf -lv

none4@pci0:5:0:0: class=0x020000 rev=0x05 hdr=0x00 vendor=0x10ec device=0x8125 subvendor=0x10ec subdevice=0x8125
    vendor     = 'Realtek Semiconductor Co., Ltd.'
    device     = 'RTL8125 2.5GbE Controller'
    class      = network
    subclass   = ethernet

re0@pci0:7:0:0: class=0x020000 rev=0x0c hdr=0x00 vendor=0x10ec device=0x8168 subvendor=0x10ec subdevice=0x0123
    vendor     = 'Realtek Semiconductor Co., Ltd.'
    device     = 'RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller'
    class      = network
    subclass   = ethernet

reboot


UEFI:
                                                                                
   Network Device List                                   Network Device         
 > MAC:02:76:C6:00:09:79                                                        
 > MAC:00:02:F7:00:9C:3C                                                        
                                                                                
   Press ESC to exit.                                                           
     
     
New card has MAC  > MAC:02:76:C6:00:09:79                                                        
     
REALTEK Drivers
---------------
https://www.realtek.com/en/component/zoo/category/network-interface-controllers-10-100-1000m-gigabit-ethernet-pci-express-software
     
FreeBSD drivers at:
/home/mm/DSbD/realtek_drivers_freeBSD/rtl_bsd_drv_v198.00.tgz


pkg64c install wget
wget https://plebble.net/rtl_bsd_drv_v198.00.tgz



26 jan
==================================================================================================================
Future Flaw Protection
----------------------
{PC} integer encoded in PC
{CAP} integer encoded in Capability

values:
{PC} = 0 - Program is superuser (have access to any capability in the program)
{CAP} = 0 - Data is accessible for any user (non sensistive data, e.g. public listings)

{PC} > 0 - Program has access to capabilities where {CAP} == {PC} or {CAP} == 0)
{CAP} > 0 - Data is readable only if {PC} == 0 or {PC}=={CAP}

malloc -> create CAP with {CAP} = {PC}

pseudo-program:
================================================
executive mode
{PC} init 0

//w-sub-i compartiment for user i

{PC}=1
w1 = new int();
{PC}=0

{PC}=2
w2 = new int();
{PC}=0

{PC}=3
w3 = new int();
{PC}=0

userid=2 //the program realizes an user id

restricted mode

{PC}=userid  //Load user id into Program Counter Capability

[[[[[[[[[[..big program that will introduce a flaw in the future...]]]]]]]]]]]
*w1; //the flaw allows an attacker (user 2) to have access to pointer w1 (belonging to user 1).
     //CHERI tags the capability invalid when the HW realizes {PC}>0 && {CAP}>0 && {PC}!={CAP}


trampoline - runs executive mode
========================================================


learning session 26-Jan.
    the dynlinker c18n model
    the cocalls c18n model


The flavour c18n model:
based on storing data in a service field of the capability.
PC Register as well.
With logic:
value of the service field 
capability {PC}   {CAP}   result tag
             0      >=0       1 (Valid)
             >0     0         1 (Valid)
             >0     >0        1 (Valid if numbers match);
                              0 (Invalid otherwise)

!xor {PC} {CAP}



0 & 0 = 1
0 & 1 = 1 
1 & 0 = 1
1 & 1 = 1 

Orig version before learning session 26-Jan:



{PC} init 0

//w-sub-i compartiment for user i

{PC}=1
w1 = new int();
{PC}=0

{PC}=2
w2 = new int();
{PC}=0

{PC}=3
w3 = new int();
{PC}=0

userid=2 //the program realizes an user id

{PC}=userid  //Load user id into Program Counter Capability

[[[[[[[[[[..big program that will introduce a flaw in the future...]]]]]]]]]]]
*w1; //the flaw allows an attacker (user 2) to have access to pointer w1 (belonging to user 1).
     //CHERI tags the capability invalid when the HW realizes {PC}>0 && {CAP}>0 && {PC}!={CAP}
========================================================


19 jan
==================================================================================================================
1:1

[PASS] Milestone 1:
[PASS]      Install Operating System.

Milestone 0:
[PASS]      Install git
[PASS]      Clone source code
[PASS]      Adapt devops scripts (made for debian Linux) to freeBSD
[ok  ]      Install dev toolchain
[OK  ]      Build and/or install dependencies: secp256k1
[OK  ]      Build node software
[    ]      Install and run.

Milestone 1:
[prog]      Design use case
[PROG]      Implement use case
[    ]      Run use case

Milestone 2:
[    ]      Document findings.


INCIDENCIES
-----------
Network adapter
Upgrading OS

STATUS
------
studying capability fields:
Tested spacial confinement: fields: base, addr, offset
Tested tag bit
Design issue: compartmentalization
Trying to learn how to:
-how to use the otype field.
-how to use the seal bit.
-how to elevate process priviledge using integers, e.g. from 0 (root priviledge) to 6443 (user with public key 6443).
 so the process can access capabilities either 0 or 6443 but not others e.g. 3330
-how to recover original priviledges.






14jan
==================================================================================================================
poc/main.cpp


#include <cheri.h>
#include <cheriintrin.h>

Incompatible includes:
c++  main.cpp
In file included from main.cpp:28:
/usr/local64/llvm-morello/lib/clang/13.0.0/include/cheriintrin.h:119:3: error: typedef redefinition with different types ('enum cheri_perms_t' vs 'unsigned int')
} cheri_perms_t;
  ^
/usr/local64/llvm-morello/lib/clang/13.0.0/include/cheri.h:31:22: note: previous definition is here
typedef unsigned int cheri_perms_t;
                     ^
1 error generated.
*** Error code 1

=======================================================================================

//#include <cheri.h>
#include <cheriintrin.h>


Adversarial CHERI Exercises and Missions: https://ctsrd-cheri.github.io/cheri-exercises/cover/index.html


----------------------------------------------------
SURPRISE:
delete p;
cheri_tag_get(p)
returns true after deleting the pointer
-----------------------------------------------------




13jan
==================================================================================================================

PoC 

pointer payload permissions: 32 bit

poc.cpp sketch

#include <iostream>
using namespace std;

using pubkey_t = uint32_t;

struct wallet_t {
   wallet_t(): balance(next_balance++) {
   }
   int balance;

   static int next_balance{0};
};

pubkey_t me{3};

//CHERI: pubkey i
  * cannot change others capabilities
  * cannot change its own capability
  * cannot access superior or sibling capabilities


struct wallets_t: unordered_map<pubkey_t, wallet_t*> {
  wallets_t() { //runs before main (super-capability)
    for (int i = 0; i < 10; ++i) {
      wallet_t* w = new wallet_t();
      //CHERI: tell CPU the pointer w can only be accessed by pubkey i or superior capability
      emplace(i, w);
      cout << "SUPERCAP> new user pubkey " << i << " balance " << w->balance << '\n';
    }
  }
  
};

wallets_t wallets;

wallet_t* lookup_wallet(pubkey_t& user) {
  auto i = wallets.find(user);
  if (i == wallets.end) {
    return nullptr;
  }
  return i->second;
}

int get_balance() {
  wallet_t* w = lookup_wallet(me);
  if (w == nullptr) {
    return 0;
  }
  return w->balance();
}



int main() { //explore wallet as given publickey
  me = atoi(argv[2]);

  //CHERI: tell CPU new permissions

  //...complex software

  cout << "I am public key: " << me << '\n';
  cout << "my balance is " << get_balance() << '\n';

  //...more complex software
  
  //malicious intention: I try to spy on other's wallets knowing that they are hosted here (in this process space)
  //software glich/code injection: I am able to disclose all wallets
  for (int n = 0, auto& i: wallets) {
    cout << "wallet " << ++n << ": balance " << i.second->balance << '\n';
  }
  return 0;
}


morello/poc/main.cpp



Android:enable USB Thethering.
MORELLO:
dhclient ue0

adduser root1m3
/home/root1m3
git clone https://github.com/root1m3/morello.git


[root1m3@cheripleb ~/morello/poc]$ ./a.out 1
SUPERCAP> new user pubkey 0 balance 1
SUPERCAP> new user pubkey 1 balance 2
SUPERCAP> new user pubkey 2 balance 3
SUPERCAP> new user pubkey 3 balance 4
SUPERCAP> new user pubkey 4 balance 5
SUPERCAP> new user pubkey 5 balance 6
SUPERCAP> new user pubkey 6 balance 7
SUPERCAP> new user pubkey 7 balance 8
SUPERCAP> new user pubkey 8 balance 9
SUPERCAP> new user pubkey 9 balance 10
I am public key: 1. balance 2
wallet 9: balance 10
wallet 8: balance 9
wallet 7: balance 8
wallet 6: balance 7
wallet 5: balance 6
wallet 4: balance 5
wallet 3: balance 4
wallet 2: balance 3
wallet 1: balance 2
wallet 0: balance 1
[root1m3@cheripleb ~/morello/poc]$ 

-----------------------------------------------------------
#include <cheri.h>  
#include <cheriintrin.h>  
#include <cheri/cheri.h> 
-----------------------------------------------------------

[root1m3@cheripleb ~/morello/poc]$ make
c++  main.cpp
In file included from main.cpp:9:
/usr/local64/llvm-morello/lib/clang/13.0.0/include/cheriintrin.h:119:3: error: typedef redefinition with different types ('enum cheri_perms_t' vs 'unsigned int')
} cheri_perms_t;
  ^
/usr/local64/llvm-morello/lib/clang/13.0.0/include/cheri.h:31:22: note: previous definition is here
typedef unsigned int cheri_perms_t;
                     ^
1 error generated.
*** Error code 1

Stop.
make: stopped in /usr/home/root1m3/morello/poc

-----------------------------------------------------------








12jan
==================================================================================================================
Installed new PCI Ethernet card.


pciconf -lv

none4@pci0:5:0:0: class=0x020000 rev=0x05 hdr=0x00 vendor=0x10ec device=0x8125 subvendor=0x10ec subdevice=0x8125
    vendor     = 'Realtek Semiconductor Co., Ltd.'
    device     = 'RTL8125 2.5GbE Controller'
    class      = network
    subclass   = ethernet

re0@pci0:7:0:0: class=0x020000 rev=0x0c hdr=0x00 vendor=0x10ec device=0x8168 subvendor=0x10ec subdevice=0x0123
    vendor     = 'Realtek Semiconductor Co., Ltd.'
    device     = 'RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller'
    class      = network
    subclass   = ethernet

reboot


UEFI:
                                                                                
   Network Device List                                   Network Device         
 > MAC:02:76:C6:00:09:79                                                        
 > MAC:00:02:F7:00:9C:3C                                                        
                                                                                
   Press ESC to exit.                                                           
     
     
New card has MAC  > MAC:02:76:C6:00:09:79                                                        
     
REALTEK Drivers
---------------
https://www.realtek.com/en/component/zoo/category/network-interface-controllers-10-100-1000m-gigabit-ethernet-pci-express-software
     

TO DO: Install Drivers new card.

Big breakthrough:
USB Thetering via mobile worked! Morello has network again, at least while my mobile is around.


bin/bootstrap_cheriBSD






11 jan
==================================================================================================================

https://docs.freebsd.org/doc/5.3-RELEASE/usr/share/doc/handbook/config-network-setup.html

root@cheripleb:~/devjob_2b4ed310/core0/us # /etc/rc.d/netif restart
dhclient not running? (check /var/run/dhclient/dhclient.re0.pid).
Stopping Network: lo0 re0.
lo0: flags=8048<LOOPBACK,RUNNING,MULTICAST> metric 0 mtu 16384
        options=680003<RXCSUM,TXCSUM,LINKSTATE,RXCSUM_IPV6,TXCSUM_IPV6>
        groups: lo
        nd6 options=21<PERFORMNUD,AUTO_LINKLOCAL>
re0: flags=8802<BROADCAST,SIMPLEX,MULTICAST> metric 0 mtu 1500
        options=8209b<RXCSUM,TXCSUM,VLAN_MTU,VLAN_HWTAGGING,VLAN_HWCSUM,WOL_MAGIC,LINKSTATE>
        ether 00:02:f7:00:9c:3c
        media: Ethernet autoselect (none)
        status: no carrier
        nd6 options=29<PERFORMNUD,IFDISABLED,AUTO_LINKLOCAL>
Starting Network: lo0 re0.
lo0: flags=8049<UP,LOOPBACK,RUNNING,MULTICAST> metric 0 mtu 16384
        options=680003<RXCSUM,TXCSUM,LINKSTATE,RXCSUM_IPV6,TXCSUM_IPV6>
        inet6 ::1 prefixlen 128
        inet6 fe80::1%lo0 prefixlen 64 scopeid 0x2
        inet 127.0.0.1 netmask 0xff000000
        groups: lo
        nd6 options=21<PERFORMNUD,AUTO_LINKLOCAL>
re0: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> metric 0 mtu 1500
        options=8209b<RXCSUM,TXCSUM,VLAN_MTU,VLAN_HWTAGGING,VLAN_HWCSUM,WOL_MAGIC,LINKSTATE>
        ether 00:02:f7:00:9c:3c
        media: Ethernet autoselect (none)
        status: no carrier
        nd6 options=29<PERFORMNUD,IFDISABLED,AUTO_LINKLOCAL>

-----UEFI

/------------------------------------------------------------------------------\
|                             Network Device List                              |
\------------------------------------------------------------------------------/
                                                                                
   Network Device List                                   Network Device         
 > MAC:00:02:F7:00:9C:3C                                                        
                                                                                
   Press ESC to exit.                                                           
                                                                                
   

-----------------------------

Powered off via PSU switch for 1 hour, also unplugged electricity
Disconnected all connections (eth, dbg-cable, usbstick)
------------------------------

Direct eth connection between host(linux) and Morelloboard(cheriBSD) [without switch]

HOST:
dmesg:
[161307.954426] r8169 0000:02:00.0 enp2s0: Link is Up - 100Mbps/Full - flow control off

ifconfig:
enp2s0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.38  netmask 255.255.255.0  broadcast 192.168.0.255
        inet6 fe80::e654:e8ff:fe78:f712  prefixlen 64  scopeid 0x20<link>
        inet6 fd20:1662:cdb7:0:e654:e8ff:fe78:f712  prefixlen 64  scopeid 0x0<global>
        inet6 2a02:c7c:39ac:2c00:e654:e8ff:fe78:f712  prefixlen 64  scopeid 0x0<global>
        ether e4:54:e8:78:f7:12  txqueuelen 1000  (Ethernet)
        RX packets 1280030  bytes 971266778 (926.2 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 930210  bytes 163968637 (156.3 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0


MORELLO:
dmesg:
[no new entries]. Last is:re0: link state changed to DOWN

ifconfig:
re0: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> metric 0 mtu 1500
        options=8209b<RXCSUM,TXCSUM,VLAN_MTU,VLAN_HWTAGGING,VLAN_HWCSUM,WOL_MAGIC,LINKSTATE>
        ether 00:02:f7:00:9c:3c
        media: Ethernet autoselect (none)
        status: no carrier
        nd6 options=29<PERFORMNUD,IFDISABLED,AUTO_LINKLOCAL>


--------------------------------------------
wget https://download.freebsd.org/releases/arm64/aarch64/ISO-IMAGES/13.1/FreeBSD-13.1-RELEASE-arm64-aarch64-mini-memstick.img.xz

root@roston:/home/root1m3/morello# dd if=FreeBSD-13.1-RELEASE-arm64-aarch64-mini-memstick.img of=/dev/sdd bs=1048576

FreeBSD-13.1 - Live CD
----------------------
root@:~ # ifconfig
re0: flags=8802<BROADCAST,SIMPLEX,MULTICAST> metric 0 mtu 1500
        options=8209b<RXCSUM,TXCSUM,VLAN_MTU,VLAN_HWTAGGING,VLAN_HWCSUM,WOL_MAGIC,LINKSTATE>
        ether 00:02:f7:00:9c:3c
        media: Ethernet autoselect (none)
        status: no carrier
        nd6 options=29<PERFORMNUD,IFDISABLED,AUTO_LINKLOCAL>



10 jan
==================================================================================================================

testing the last succssful image, the one built with Paulius:
root@roston:/home/paulius/cheri/output/cheribsd-release-morello-purecap# dd if=FreeBSD-14.0-CURRENT-arm64-aarch64c-memstick.img of=/dev/sde  bs=1048576
798+1 records in
798+1 records out
836778496 bytes (837 MB, 798 MiB) copied, 428.003 s, 2.0 MB/s

Acquiring DHCP lease...  
DHCP lease acquisition failed.  

----------

Forget about Ethernet interface. Let's install latest cheriBSD and move on using with memsticks to transfer data back and forth.

cherribsd_ver="22.12"

Installed CherriBSD 22.12 with static ipv4 configuration


9 jan
==================================================================================================================
MCC: reboot
DISPLAY: No network cable detected

rewrite firmware

root@roston:/home/root1m3/morello/board-firmware# git pull
fatal: detected dubious ownership in repository at '/home/root1m3/morello/board-firmware'
To add an exception for this directory, call:

	git config --global --add safe.directory /home/root1m3/morello/board-firmware
root@roston:/home/root1m3/morello/board-firmware# git config --global --add safe.directory /home/root1m3/morello/board-firmware
root@roston:/home/root1m3/morello/board-firmware# git pull
remote: Enumerating objects: 11, done.
remote: Counting objects: 100% (11/11), done.
remote: Compressing objects: 100% (10/10), done.
remote: Total 11 (delta 3), reused 7 (delta 1), pack-reused 0
Unpacking objects: 100% (11/11), 2.73 MiB | 2.43 MiB/s, done.
From https://git.morello-project.org/morello/board-firmware
   05140de..210f2c2  morello/mainline     -> origin/morello/mainline
 * [new branch]      cherry-pick-b9d06517 -> origin/cherry-pick-b9d06517
 * [new branch]      morello/release-1.5  -> origin/morello/release-1.5
Updating 05140de..210f2c2
Fast-forward
 SOFTWARE/AARCH64/fip.bin    | Bin 2235727 -> 2235727 bytes
 SOFTWARE/AARCH64/mcp_fw.bin | Bin 21420 -> 21444 bytes
 SOFTWARE/AARCH64/scp_fw.bin | Bin 170228 -> 170256 bytes
 SOFTWARE/fip.bin            | Bin 2235727 -> 2235727 bytes
 SOFTWARE/mcp_fw.bin         | Bin 21420 -> 21444 bytes
 SOFTWARE/scp_fw.bin         | Bin 170228 -> 170256 bytes
 6 files changed, 0 insertions(+), 0 deletions(-)
root@roston:/home/root1m3/morello/board-firmware# cd ..
root@roston:/home/root1m3/morello# ls /media/mm/
ARKITECH/            ARKITECH-221221.tgz  C175-C436/           
root@roston:/home/root1m3/morello# ls /media/mm/C175-C436/
config.txt  ee0364b.txt  LIB  LICENSES	MB  SOFTWARE
root@roston:/home/root1m3/morello#  bin/firmware_update --nobackup --mnt /media/mm/C175-C436 git
nobackup flag
pulling changes in board firmware
Already up to date.
/home/root1m3/morello
#################################################
Overwiting sdcard.
sdcard at /media/mm/C175-C436
WARNING: not backing-up the current sdcard content!.
new content from: board-firmware
#################################################
yes?
yes
deleting old firmware in sdcard
copying new firmware in sdcard
syncing
done!.
umount /media/mm/C175-C436
When done, you must unmount the mounted filesystem (USB_OFF) to ensure that all blocks in your workstation's filesystem buffer cache have been written back, and to avoid concurrent accesses leading to possible filesystem corruption. This must be done before issuing the MCC reboot command.

usb_off
Disabling debug USB...

MCC to access SD card request acknowledged.
Cmd> 


reboot
------------------

MnpSyncSendPacket: No network cable detected.

firmware upgrade didnt fix the ethernet problem.


===========================
Last Ave: checking datetime. It was 2 days behind! time was also funny

Debug> date
07/01/2023

Change Date? Y\N >y
D:>9
M:>1
Y:>2023
Debug> date
09/01/2023

Change Date? Y\N >n
Debug> 

Debug> time
23 : 30 : 48

Change Time? Y\N >y
s:>0
m:>57
h:>11
Debug> 

---------------------------

reboot

MnpSyncSendPacket: No network cable detected.


---------------------------------

CHERI (CAM): https://www.cl.cam.ac.uk/research/security/ctsrd/cheri/cheri-publications.html
CHERI C/C++ Programming Guide: https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-947.pdf


paper: Towards Automatic Compartmentalization of C Programs on Capability Machines - https://people.mpi-sws.org/~elkorashy/files/auto-comp-c-fcs2017.pdf

---------------------------------
WRITE CHERIBSD 22.12 (latest)

cherribsd_ver="22.12"
bin/cherriBSD_stick
erase /dev/sdg
record CheriBSD Boot USB drive:
1219+1 records in
1219+1 records out
1278294528 bytes (1.3 GB, 1.2 GiB) copied, 428.087 s, 3.0 MB/s


------------------------------------

Plug memstick into board and boot

Time :  13:09:06 
Date :  09:01:2023 

(clock checked OK)

--------------------------------------

MnpSyncSendPacket: No network cable detected.















8 jan
==================================================================================================================
Ethernet Issue.
===============


root@roston:/home/root1m3/xxtt# wget https://download.cheribsd.org/releases/arm64/aarch64c/22.12/cheribsd-memstick-arm64-aarch64c-22.12.img.xz
--2023-01-08 10:21:25--  https://download.cheribsd.org/releases/arm64/aarch64c/22.12/cheribsd-memstick-arm64-aarch64c-22.12.img.xz
Resolving download.cheribsd.org (download.cheribsd.org)... 2001:630:212:2a8::80:d36, 128.232.18.152
Connecting to download.cheribsd.org (download.cheribsd.org)|2001:630:212:2a8::80:d36|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 652686560 (622M) [application/octet-stream]
Saving to: ‘cheribsd-memstick-arm64-aarch64c-22.12.img.xz’

cheribsd-memstick-arm64-aarch64c-22.12.i 100%[===============================================================================>] 622.45M  3.28MB/s    in 2m 54s  

2023-01-08 10:24:19 (3.58 MB/s) - ‘cheribsd-memstick-arm64-aarch64c-22.12.img.xz’ saved [652686560/652686560]

root@roston:/home/root1m3/xxtt# sha256sum  cheribsd-memstick-arm64-aarch64c-22.12.img.xz 
494c1f1b93b160a6754c4611368360238b36f78ee1e66c55d5844cb915c87133  cheribsd-memstick-arm64-aarch64c-22.12.img.xz


root@roston:/home/root1m3/morello# sha256sum  cheribsd-memstick-arm64-aarch64c-22.12.img.xz 
494c1f1b93b160a6754c4611368360238b36f78ee1e66c55d5844cb915c87133  cheribsd-memstick-arm64-aarch64c-22.12.img.xz


CheriBSD new version has been announced by mail.
Binary is the same.

Shut down morello. Reinstall OS
-------------------------------
MCC console
| RESET                     | Reset Board using CB_nRST                 |
reset
Warning: User reset unavailable. USERRST set to False.

never mind.

IOFPGA_VERSION
IOFPGA Version: 220126

never mind.

reboot

Boot from USB Stick 22.12: FAIL DHCP

logdata/2023-01-08/boot_cheribsd_22.12/Screenshot from 2023-01-08 15-


=====================================================================

Trying previous version CheriBSD:cheribsd-memstick-arm64-aarch64c-22.05p1.img
root@roston:/home/root1m3/morello# sha256sum cheribsd-memstick-arm64-aarch64c-22.05p1.img
7504bea10c405725432c202491142e683084db72dbfa33cd88c21e204cee44e7  cheribsd-memstick-arm64-aarch64c-22.05p1.img


cherribsd_ver="22.05p1"
bin/cherriBSD_stick

Input /dev/<name> (e.g. sde)
sdg
Input "erase /dev/sdg"
erase /dev/sdg   
record CheriBSD Boot USB drive:
777+1 records in
777+1 records out
814955008 bytes (815 MB, 777 MiB) copied, 209.052 s, 3.9 MB/s

stick Morello:
poweoff - electricity cut for few minutes

/home/root1m3/morello/logdata/2023-01-08/1673192887394.jpg    Morello board off. USB debug cable + USB Stick with cheriBSD 22.05p1 installer + Network cable (other end plugged in inet router).

Arm M1SDP MCC Boot loader v1.0.0
HBI0364 build 579

MCC: Power On


Arm M1SDP MCC Firmware v2.3.2
Build Date: Aug  3 2022

Powering up system...

MCC to access SD card request acknowledged.
Clear ULINK JTAG

Time :  04:46:31 
Date :  07:01:2023 

Switching on ATXPSU...
Switching on main power...

12V Rail Check Pass

Reading Board File \MB\HBI0364B\io_v010f.txt
TOTAL OSCCLKS: 15
PMIC RAM configuration (80_1_86G.bin)...

Temperature (deg C)
Outlet = 23.2 PMIC   = 25.3 SoC = 25.2 IN2  = 24.9 IN1 = 23.2 
MidBrd = 25   PCIeSW = 24   MCC = 26.2 FPGA = 23.3 SoC Fan Speed = 9%
ALERT off

Morello console:
---------------
Press ESCAPE for boot options.
MnpSyncSendPacket: No network cable detected.

screen locked

MCC: reboot









20 Dec
====================================================================================================================

cherribsd_ver="22.12"

bin/cherriBSD_stick



19 Dec
====================================================================================================================

Theres a new version of cheriBSD! at https://download.cheribsd.org/releases/arm64/aarch64c
Old:
    cheribsd-memstick-arm64-aarch64c-22.05
    cheribsd-memstick-arm64-aarch64c-22.05p1

New:
    cheribsd-memstick-arm64-aarch64c-22.12.img.xz


host# 
Plug USB stick.
dmesg
[2605317.598067] usb 1-7: new high-speed USB device number 40 using xhci_hcd
[2605317.813101] usb 1-7: New USB device found, idVendor=13fe, idProduct=4300, bcdDevice= 1.00
[2605317.813108] usb 1-7: New USB device strings: Mfr=1, Product=2, SerialNumber=3
[2605317.813112] usb 1-7: Product: USB DISK 2.0
[2605317.813115] usb 1-7: Manufacturer: Wilk
[2605317.813118] usb 1-7: SerialNumber: 071C1CBF293AF657
[2605317.818489] usb-storage 1-7:1.0: USB Mass Storage device detected
[2605317.819115] scsi host9: usb-storage 1-7:1.0
[2605319.561873] scsi 9:0:0:0: Direct-Access     Wilk     USB DISK 2.0     PMAP PQ: 0 ANSI: 4
[2605319.562652] sd 9:0:0:0: Attached scsi generic sg3 type 0
[2605319.563304] sd 9:0:0:0: [sde] 60628992 512-byte logical blocks: (31.0 GB/28.9 GiB)
[2605319.564149] sd 9:0:0:0: [sde] Write Protect is off
[2605319.564156] sd 9:0:0:0: [sde] Mode Sense: 23 00 00 00
[2605319.564984] sd 9:0:0:0: [sde] No Caching mode page found
[2605319.564995] sd 9:0:0:0: [sde] Assuming drive cache: write through
[2605319.587632] GPT:Primary header thinks Alt. header is not at the end of the disk.
[2605319.587636] GPT:1634332 != 60628991
[2605319.587637] GPT:Alternate GPT header not at the end of the disk.
[2605319.587639] GPT:1634332 != 60628991
[2605319.587640] GPT: Use GNU Parted to correct GPT errors.
>> [2605319.587647]  sde: sde1 sde2
[2605319.591039] sd 9:0:0:0: [sde] Attached SCSI removable disk


dev=/dev/sde
url=https://download.cheribsd.org/releases/arm64/aarch64c/22.12/cheribsd-memstick-arm64-aarch64c-22.12.img.xz
file=$(basename ${url})
xfile=cheribsd-memstick-arm64-aarch64c-22.12.img
wget ${url}
sha256sum ${file}
CCCCCC 87aae719ef06849ec03dc20a3268a81fda3d94e8bf3c4d9ce2db377fb452bdba  cheribsd-memstick-arm64-aarch64c-22.05p1.img.xz

unxz ${file}
dd if=${xfile} of=${dev} bs=1048576
sync
eject ${dev}

MCC: reboot
Morello Console:





18 dec
====================================================================================================================

updated devjob to alpha-55

pkg64c info --list-file libb64
pkg64c install libb64


https://github.com/GobySoft/dccl/issues/43


----------------
let nl=$(git diff --name-only | grep -v us/sdk/wallet/java/us/vcs.java | wc -l)

linux:
OK
freebsd:
bash: let: x=: syntax error: operand expected (error token is "=")
let nl=$(git diff --name-only | grep -v us/sdk/wallet/java/us/vcs.java | wc -l | awk '{ print $1 }')
OK
-------------------

// ------------base64 decoder - https://github.com/GobySoft/dccl/issues/43
#if CFG_is_FreeBSD == 1
    #include <cstdio>
    #define BUFFERSIZE BUFSIZ
#endif
#include <b64/decode.h>
// -/----------base64 decoder


#if CFG_is_FreeBSD == 1
    #include <machine/endian.h>
#else
    #include <endian.h>
#endif


root@cheripleb:~/devjob_2b4ed310/core0/us # pkg64 install ack
Updating CheriBSD repository catalogue...
Fetching meta.conf: 100%    163 B   0.2kB/s    00:01    
Fetching packagesite.pkg: 100%    5 MiB   5.1MB/s    00:01    
Processing entries: 100%
CheriBSD repository update completed. 24494 packages processed.
All repositories are up to date.
pkg64: No packages available to install matching 'ack' have been found in the repositories

--------------------------


#ifdef __FreeBSD__
#include <sys/socket.h>
#endif

 for ::socket

--------------------------

blob_reader_t.cpp:154:9: error: 
no matching conversion for functional-style cast
from 'chrono::nanoseconds' (aka 'duration<long long, ratio<1LL, 1000000000LL>>')
to   'us::time_point' (aka 'time_point<std::chrono::system_clock>')
o = time_point(chrono::nanoseconds(x));

o = time_point(chrono::duration_cast<chrono::system_clock::duration>(chrono::nanoseconds(x)));

-------------------------------


In file included from cfg0.cpp:316:
./command.h:76:24: error: use of undeclared identifier 'WEXITSTATUS'
            exitcode = WEXITSTATUS(res);

#ifdef __FreeBSD__
#include <sys/wait.h>
#endif


-------------------------------

#include <sstream> //<========== added

#include <us/gov/crypto/types.h>

#include "types.h"

namespace us::gov::io {
    using namespace std;    //<========== added
    ...

-------------------------------
client.cpp:280:20: error: expected unqualified-id
        auto o = ::ntohs(s->sin_port);
                   ^
/usr/include/netinet/in.h:122:18: note: expanded from macro 'ntohs'
#define ntohs(x)        __ntohs(x)
                        ^
/usr/include/sys/_endian.h:82:20: note: expanded from macro '__ntohs'
#define __ntohs(x)      (__bswap16(x))
   
::ntohs ==> ntohs
-------------------------------


There is no stdc++fs present in the system for clang.
Only gcc installs /usr/local/lib/gcc8/libstdc++fs.a.
With clang-8 build fails with missing library.

-------------------------------
thread_logger.cpp:109:11: warning: cast from provenance-free integer type to pointer type will give pointer that can not be dereferenced [-Wcheri-capability-misuse]
    os << (void*)t;
          ^

#define print_stacktrace (void)sizeof
----------------------------------

MILESTONE: code compiles

run core0 tests
===============
signals - CTRL-C doesn't work

worked on a fix


-------------------------------
unplug eth
plug again --> needs

service netif restart


--------------------------------













16 dec
====================================================================================================================

Node Bootstrapping works scheduled in release_notes for the next version:

alpha-55 -
    * aarch64c new architecture integrated in the network deployment pipeline.
    * FreeBSD, cheriBSD adaptation. First Node based on the new ARM processor:
          UK Research & Innovation
          DSbD DigitalSecurebyDesign 
          Digital Catapult - Tech Prototype: ARM Morello board. SoC IntegratING CHERI spec (Cambridge University)
          Campartimentalization: Fat Pointers encoding capabilities can be leveraged by this new arch: aarch64c

14 dec
====================================================================================================================

    Meeting. Slideshow about Compartiments and Fat pointers


2,3,6 dec
====================================================================================================================
Continuing adaptation to FreeBSD of script bin/configure
bin/configure
bin/gen_vcs_git

pkg64 install autotools gmake cryptopp

bash
gmake
export CXX=c++

git clone https://github.com/bitcoin-core/secp256k1.git
pkg64 install autotools

pkg64 install cryptopp --> didnt work (Not available for morello?)

git clone https://github.com/weidai11/cryptopp.git
clang-13: error: ABI 'purecap' is not supported without feature 'morello'
make
make install
cd /usr/local/include
ln -s cryptopp crypto++

pkg64 install glib
pkg-config finished with error

pkg64 install devel/pkgconf

replace in makefiles:
PKG_CONFIG_PATH=/usr/local/lib/pkgconfig pkg-config --libs libsecp256k1
pkg-config --libs libcryptopp

pkg64 install base64


cbs: pkg64 install rsync python


26Nov
====================================================================================================================
Updating bin/configure
sed -i




20Nov
====================================================================================================================

chapter 8.
https://ctsrd-cheri.github.io/cheribsd-getting-started/helloworld/index.html

Toolchain installation
pkg64 install llvm-base

#include <stdio.h>

int
main(void)
{
    printf("Hello world\n");
}

root@cheripleb:~/devjob_2b4ed310 # cc -g -O2 -Wall -o helloworld helloworld.c
root@cheripleb:~/devjob_2b4ed310 # ./helloworld
Hello world


pkg64 install gdb-cheri






18 Nov
====================================================================================================================
[[problem unlocked!!]] cause: keyboard

email to gavin with state update.


CheriBSD Boot loader succeeded (without any HDMI or KEYBOARD plugged in)
CheriBSD Installer succeeded.
Screen console:

-------------------------------------------------
Welcome to CheriBSD!

CheriBSD extends FreeBSD to implement memory protection and software
compartmentalization features enabled by CHERI-extended CPUs.

The CheriBSD front page:
  https://www.cheribsd.org/

We provide support via a mailing list:
  https://www.cl.cam.ac.uk/research/security/ctsrd/cheri/cheri-lists.html

And also via the CHERI-CPU Slack:
  https://www.cl.cam.ac.uk/research/security/ctsrd/cheri/cheri-slack.html

CheriBSD source may be found at:
  https://github.com/CTSRD-CHERI/cheribsd/

Find out more about about CHERI at https://cheri-cpu.org/

WARNING: INVARIANTS kernel option defined, expect reduced performance
WARNING: WITNESS kernel option defined, expect reduced performance
root@cheripleb:~ # 

-------------------------------------------------

PLAN: Morello Plebble Node

[PASS] Milestone 1:
[PASS]      Install Operating System.

[ ...]Milestone 0:
[PASS]      Install git
[PASS]      Clone source code
[ ...]      Adapt devops scripts (made for debian Linux) to freeBSD
[    ]      Install dev toolchain
[    ]      Build and/or install dependencies: secp256k1
[    ]      Build node software
[    ]      Install and run.

[    ]Milestone 1:
[    ]      Design use case
[    ]      Implement use case
[    ]      Run use case

[    ]Milestone 2:
[    ]      Document findings.


OS packages: ntp bash nano git 

pkg and apt are very similar.
execute bin/configure as bash bin/configure
sh shell BSD and GNU standards conflict. sed -i

sent file id_rsa.pub (ssh-keygen) to be granted git as dev@plebble.net




17 Nov
===========================================================================================================================================================
1:1 Gavin, Darren, Konrad

the firmare device is corrupt due to a mistake during the recording of freeBSD (dd to wrong device)

we used parted and mkfs.fat to reconstruct the firmware

apt install dosfstools -y
lsblk -f
apt install mkfs
fdisk /dev/sdb
apt install fdisk
/sbin/fdisk /dev/sdb
mkdir firmdrive
/sbin/mkfs.vfat /dev/sdb1
mount /dev/sdb1 firmdrive
ls firmdrive/

-----------------------------



1.- FreeBSD completed a build with some errors but able to produce image
2.- Unplugged the drive containing cherriBSD and plug in the host machine. (This apparently caused the board to enter in corrupt state I am unable to recover from)
3.- dd the drive with the built image
4.- Inserted in morello board.
5.- Morello wont reboot, with oir without pendrive inserted.

Debug> debug 1
Debug> help

+ command --------------------+ function ---------------------------------+
| DATE                        | Displays current date                     |
| TIME                        | Displays current time                     |
| RTC                         | Displays current RTC (MCC) time           |
| DEBUG "0|1"                 | Enable(1) or Disable(0) debug printing    |
| EXIT or QUIT                | Returns to main menu                      |
| HELP or ?                   | displays this help                        |
| WRITE_SPI "register" "data" | write word to spi register in PCC         |
| READ_SPI "register"         | read spi register from PCC                |
| SET_SPI "register" "data"   | set spi register in MCC to initial value  |
| EXAM_SPI "register"         | read spi register in MCC                  |
| REBOOT                      | Power cycle system and reboot             |
+-----------------------------+-------------------------------------------+
Debug> reboot

Powering up system...

MCC to access SD card request acknowledged.
ERROR: File not found config.txt
Failed to read configuration file...
Failed to read configuration file...

Powering down...

MCC to access SD card request acknowledged.

SPI Write command to PCC: register 3 cmd 0xD003 tx data 0x1
SPI Return data from PCC: register 3 cmd 0x2000 rx data 0x0

Board powered down, use REBOOT to restart.
ERROR: File not found config.txt
Failed to read configuration file...
Failed to read configuration file...
Clear ULINK JTAG
Debug> 

-----------------------------------------------------------

Google search for: 
    Morello "File not found config.txt"
gives 0 matches

Cmd> usb_on
Enabling debug USB...


Cmd> usb_off
Disabling debug USB...

MCC to access SD card request acknowledged.

dmesg> 
[1115266.838920] usb 1-1.3: USB disconnect, device number 6

usb_on
recognized FreeBSD_Install as an unmounted device.

BUT the freebsd stick is not inserted in the box. And the expected usb device was the firmware sdcard.

Machine in Corrupt state.

CMD reboot doesnt work















===========================================================================================================================================================
14 Nov
email to gavin:

===========================================================================================================================================================
8 Nov

turned ON main supply after night off.

MCC console:
  USB_ON

Host: dmesg -w
[353100.555484] usb 1-1.3: new full-speed USB device number 80 using xhci_hcd
[353100.661950] usb 1-1.3: New USB device found, idVendor=c251, idProduct=4003, bcdDevice= 1.00
[353100.661957] usb 1-1.3: New USB device strings: Mfr=1, Product=2, SerialNumber=3
[353100.661961] usb 1-1.3: Product: M1SDP
[353100.661964] usb 1-1.3: Manufacturer: ARM Ltd
[353100.661966] usb 1-1.3: SerialNumber: 500540322043
[353100.669462] usb-storage 1-1.3:1.0: USB Mass Storage device detected
[353100.669905] usb-storage 1-1.3:1.0: Quirks match for vid c251 pid 4003: 80
[353100.670090] scsi host6: usb-storage 1-1.3:1.0
[353101.680411] scsi 6:0:0:0: Direct-Access     ARM      M1SDP                 PQ: 0 ANSI: 0
[353101.680950] sd 6:0:0:0: Attached scsi generic sg1 type 0
[353101.681640] sd 6:0:0:0: [sdb] 3921920 512-byte logical blocks: (2.01 GB/1.87 GiB)
[353101.682284] sd 6:0:0:0: [sdb] Write Protect is off
[353101.682288] sd 6:0:0:0: [sdb] Mode Sense: 03 00 00 00
[353101.682895] sd 6:0:0:0: [sdb] No Caching mode page found
[353101.682901] sd 6:0:0:0: [sdb] Assuming drive cache: write through
[353101.726877] Alternate GPT is invalid, using primary GPT.
[353101.726881]  sdb: sdb1 sdb2
[353101.729884] sd 6:0:0:0: [sdb] Attached SCSI removable disk
[353104.575436] ufs: ufs was compiled with read-only support, can't be mounted as read-write
[353104.576048] ufs: You didn't specify the type of your ufs filesystem
                
                mount -t ufs -o ufstype=sun|sunx86|44bsd|ufs2|5xbsd|old|hp|nextstep|nextstep-cd|openstep ...
                
                >>>WARNING<<< Wrong ufstype may corrupt your filesystem, default is ufstype=old
[353104.579752] ufs: ufs_fill_super(): bad magic number


The firmware sdcard seems corrupt.

Abstract of the day:
-------------------
About the session with Paulius (DSbD tech expert) held past Monday 7.
He spent deal of time trying to simply connect.
accessed my host computer via ssh.
installed minicom (I normally use screen)
he did he didn't find anything wrong. Just confirmed CheriBSD wasn't booting.
Then he gave me the recipe for building a new image of cherriBSD and put the thing on hold until it finishes.
Several hours later I burned the USB stick with the image, plug into morello board,
entered the MCC console to reboot.
BUT here I found a new class of error that I didnt see before.
It seems the firmware sdcard is in a corrupt state and I am unable to successfully exec commands.


===========================================================================================================================================================
7 Nov

Board Pictures: https://github.com/root1m3/morello/blob/main/logdata/2022-11-07/
    morello_board.jpeg
    conf_pin.jpg

----
Paulious 1:1 - triage in search of cheriBSD-unable-to-install problem.
----

https://github.com/root1m3/morello/blob/main/logdata/2022-11-07/board.txt


Explored MCC and Display consoles USB0 and USB2
Apparently everything is fine in the board.

rebuild cherriBSD:
./cheribuild.py -d --clean cheribsd-release-morello-purecap 

Send result to paulius.michelevicius@digicatapult.org.uk 

----------------
Compilation produced file
/home/paulius/cheri/output/cheribsd-release-morello-purecap/FreeBSD-14.0-CURRENT-arm64-aarch64c-memstick.img

dd if=FreeBSD-14.0-CURRENT-arm64-aarch64c-memstick.img of=/dev/sdc bs=1048576

MMC:
Cmd> reboot

Powering up system...

MCC to access SD card request acknowledged.
ERROR: File not found config.txt
Failed to read configuration file...
Failed to read configuration file...

Powering down...

MCC to access SD card request acknowledged.

SPI Write command to PCC: register 3 cmd 0xD003 tx data 0x1
SPI Return data from PCC: register 3 cmd 0x2000 rx data 0x0

Board powered down, use REBOOT to restart.
ERROR: File not found config.txt
Failed to read configuration file...
Failed to read configuration file...
Clear ULINK JTAG



MCC doesn't respond to reboot anymore!!

USB_ON is no longer mounting /media/mm/M1SDP

turned OFF the main supply.

===========================================================================================================================================================
4 Nov

1-1 Gavin. Report. https://github.com/root1m3/morello/blob/main/logdata/2022-11-04/katlas_status_report


===========================================================================================================================================================
4 Nov

Building busybox on linux debian 11 (stable)

Error building example programs.
logdata/2022-11-04/buildlog_debian_stable




===========================================================================================================================================================
3 Nov

https://git.morello-project.org/morello/docs/-/blob/morello/mainline/user-guide.rst#id6

apt-get install autoconf autopoint bc bison build-essential \
    ca-certificates cpio curl device-tree-compiler dosfstools doxygen \
    fdisk flex gdisk gettext-base git libncurses5 libssl-dev libtinfo5 \
    linux-libc-dev-arm64-cross lsb-release m4 mtools  pkg-config python \
    python3-distutils rsync snapd unzip uuid-dev wget telnet xterm









===========================================================================================================================================================
2 Nov

Busybox:
https://git.morello-project.org/morello/docs/-/blob/morello/mainline/user-guide.rst#ubuntu-distribution

4.2.4.   BusyBox with Morello purecap environment

ttyUSB<n> 00FT<platform-serial-num>B(0) Motherboard Configuration Controller(MCC)
ttyUSB<n+1> 00FT<platform-serial-num>B(1) Platform Controller Chip(PCC)
ttyUSB<n+2> 00FT<platform-serial-num>B(2) Application Processor(AP)
ttyUSB<n+3> 00FT<platform-serial-num>B(3) System Control Processor(SCP)
ttyUSB<n+4> 00FT<platform-serial-num>A(0) Manageability Control Processor(MCP)
ttyUSB<n+5> 00FT<platform-serial-num>A(1) IOFPGA UART0
ttyUSB<n+6> 00FT<platform-serial-num>A(2) IOFPGA UART1
ttyUSB<n+7> 00FT<platform-serial-num>A(3) AP Secure UART




===========================================================================================================================================================
26 Oct

I left this message in Slack:

Hi,
I have created this utility for updating the firmware in the Morello board.
Feel free to check it out, and why not improve it. : )
https://github.com/root1m3/morello/blob/main/bin/firmware_updateOn the other hand:
I wish I could say I am able to use cheriBSD but the computer refuses to boot the cheriBSD installer from the pendrive (see my last report above).I'd appreciate some review on my steps to try it out:
1- update firmware
2- record stick
3- power up from MCC
4- the cheriBSD installer freezes nearly after hitting enter on the boot menu
I'm stuck hereThank you
Marcos

===========================================================================================================================================================
24 Oct

    MCC console:    screen /dev/ttyUSB0 115200
    Morello console: screen /dev/ttyUSB2 115200

latest firmware: Arm M1SDP MCC Firmware v2.3.2
cheribsd-memstick-arm64-aarch64c-22.05.img
Morello console:
    _____ _               _ ____   _____ _____
   / ____| |             (_)  _ \ / ____|  __ \
  | |    | |__   ___ _ __ _| |_) | (___ | |  | |
  | |    | '_ \ / _ \ '__| |  _ < \___ \| |  | |
  | |____| | | |  __/ |  | | |_) |____) | |__| |
   \_____|_| |_|\___|_|  |_|____/|_____/|_____/
                                                 ```                        `
                                                s` `.....---.......--.```   -/
 /---------- Welcome to CheriBSD ----------\    +o   .--`         /y:`      +.
 |                                         |     yo`:.            :o      `+-
 |  1. Boot Multi user [Enter]             |      y/               -/`   -o/
 |  2. Boot Single user                    |     .-                  ::/sy+:.
 |  3. Escape to loader prompt             |     /                     `--  /
 |  4. Reboot                              |    `:                          :`
 |  5. Cons: Serial                        |    `:                          :MnpSyncSendPacket: No network cable detected.
`|                                         |     /                          /
 |  Options:                               |     .-                        -.
 |  6. Kernel: default/kernel (1 of 1)     |      --                      -.
 |  7. Boot Options                        |       `:`                  `:`
 |                                         |         .--             `--.
 |                                         |            .---.....----.
 \-----------------------------------------/
   Autoboot in 4 seconds. [Space] to pause  

Loading kernel...
/boot/kernel/kernel text=0x2e0 text=0x858830 text=0x2494f8 text=0x30 data=0x2631
e0 data=0x0+0x357d40 0x8+0x11ba28+0x8+0xe9167-
Loading configured modules...
can't find '/boot/entropy'
can't find '/etc/hostid'
No valid device tree blob found!
WARNING! Trying to fire up the kernel, but no device tree blob found!
EFI framebuffer information:
addr, size     0xfe000000, 0x7e9000
dimensions     1920 x 1080
stride         1920
masks          0x00ff0000, 0x0000ff00, 0x000000ff, 0xff000000


Toast 

host# wget https://download.cheribsd.org/releases/arm64/aarch64c/22.05p1/cheribsd-memstick-arm64-aarch64c-22.05p1.img.xz
host# sha256sum cheribsd-memstick-arm64-aarch64c-22.05p1.img.xz 
87aae719ef06849ec03dc20a3268a81fda3d94e8bf3c4d9ce2db377fb452bdba  cheribsd-memstick-arm64-aarch64c-22.05p1.img.xz
host# unxz cheribsd-memstick-arm64-aarch64c-22.05p1.img.xz
host# dd if=cheribsd-memstick-arm64-aarch64c-22.05p1.img of=/dev/sdd bs=1048576
host# sync; eject dev/sdd
MCC: reboot
Morello Console:
same result.



===========================================================================================================================================================
20 Oct

public development at github url: https://github.com/root1m3/morello

improved bin/firmware_update


------------------
root@roston:~/us/core2/katlas/DSbD/morello# bin/firmware_update 
Prerequisite:
  plug USB debug cable
  Access MCC: screen /dev/ttyUSB0 115200
  Mount sdcard: USB_ON
  It should be then mounted at 

examples:
bin/firmware_update git
      Backs-up current content and
      writes the latest version from
      https://git.morello-project.org/morello/board-firmware.git

bin/firmware_update git backup_firm/XXXXX
      Backs-up current content and
      writes the version found in
      backup_firm/XXXXX

KO 67857 specify source dir or git.
------------------


Restore sdcard content with legacy backup (morello board original sdcard content)
--------------------------------------------------------
bin/firmware_update  backup_firm/2022-09-25_057d0c9ab2929c14496a7c3254312511dcce1be5fd95be2ced7326d334bd090e
backing up sdcard...
created backup of current sdcard in morello board at backup_firm/2022-10-20_27465bf2aca905985b7305753c2326cc960a593f21d505cd1af8abbe1c7d65b3
#################################################
Overwiting sdcard.
sdcard at /media/mm/M1SDP
backed up in: backup_firm/2022-10-20_27465bf2aca905985b7305753c2326cc960a593f21d505cd1af8abbe1c7d65b3
new content from: backup_firm/2022-09-25_057d0c9ab2929c14496a7c3254312511dcce1be5fd95be2ced7326d334bd090e
#################################################
yes?
deleting old firmware in sdcard
copying new firmware in sdcard
syncing
done!.
umount /media/mm/M1SDP
When done, you must unmount the mounted filesystem to ensure that all blocks in your workstation's filesystem buffer cache have been written back, and to avoid concurrent accesses leading to possible filesystem corruption. This must be done before issuing the MCC reboot command.
--------------------------------------------------------


came across this logbook: https://oxon.tech/2021/05/04/dsbd-getting-started/

==========qemu=============

as non-root user:

git clone https://github.com/CTSRD-CHERI/cheribuild.git
cd cheribuild
./cheribuild.py --qemu/no-use-smbd --include-dependencies qemu

*|\-/|\-/|\-
built for target 'qemu' in 273.25427293777466 seconds

====
./cheribuild.py -d build-and-run-cheribsd-riscv64-purecap
Fatal error: Dependency for cheribsd-riscv64-purecap missing: Required library libarchive is missing!


Try to not build bur run a prebuilt image in qemu

------
wget https://download.cheribsd.org/releases/arm64/aarch64c/22.05p1/cheribsd-memstick-arm64-aarch64c-22.05p1.img.xz

aptitude install libarchive-dev libarchive-tools

./cheribuild.py --qemu/no-use-smbd run-riscv64-purecap -d
*|\-/|\-/|\-

nice read while building: 
   https://www.cl.cam.ac.uk/~nwf20/cheri-exercises-book/introduction/cheatsheet-release.html
   

1st error:
Cannot find host tool 'time' in PATH (/sbin:/bin:/usr/sbin:/usr/bin::::::::::::::::::::::::::::::::).

apt install time

./cheribuild.py --qemu/no-use-smbd run-riscv64-purecap -d

Fatal error (in target gdb-riscv64-hybrid-for-purecap-rootfs): Command `nice gmake -j8 all-binutils` failed with non-zero exit code 2

/home/root1m3/cheri/gdb/missing: 81: makeinfo: Permission denied
WARNING: 'makeinfo' is missing on your system.
         You should only need it if you modified a '.texi' file, or
         any other file indirectly affecting the aspect of the manual.
         You might want to install the Texinfo package:
         <http://www.gnu.org/software/texinfo/>
         The spurious makeinfo call might also be the consequence of
         using a buggy 'make' (AIX, DU, IRIX), in which case you might
         want to install GNU make:
 
attributed to debian unstable.

--------------------
apt install texinfo
The following packages have unmet dependencies:
 texinfo : Depends: perlapi-5.32.0
E: Unable to correct problems, you have held broken packages.
--------------------

P2P Session.
Konrad:
Hinted to not using HDMI, but the Morello serial port.
Hinted reading https://ctsrd-cheri.github.io/cheribsd-getting-started/morello-console/index.html
Hinted using 2 screen terminasls, one for MCC and Morello system console respectively

screen /dev/ttyUSB2 115200



==========back to cherriBSD=============
/dev/cuaU2 -s 115200



===========================================================================================================================================================
11-Oct:

Received response from Cambridge University. CHERIBSD won't boot with a monitor plugged.

Disconnected HDMI and boot from the console:

MCC console:    screen /dev/ttyUSB0 115200  (as root bcs as user doesn't work)

Still CHERIBSD doesn't boot even if a monitor us unplugged. Same error shown on screen after plugin the hdmi interface after boot.





===========================================================================================================================================================
29-sep: 1:1 Sep2022

MM vs
   Gavin Burns dsbdprogramme@digicatapult.org.uk
   DSbD 
   cherri-tech 



explained our PoC as a vulnerability exploit
explained technical blockers

received already known links:
https://ctsrd-cheri.github.io/cheribsd-getting-started/morello/index.html
https://github.com/CTSRD-CHERI/cheribuild

[problem]
qemu live images not available.

[FAIL] build qemu live image:
./cheribuild.py --include-dependencies qemu


===========================================================================================================================================================
27-Sep:
    Trying earlier version of cheriBSD:
    dd if=cheribsd-memstick-arm64-aarch64c-22.05.img of=/dev/sdc bs=1048576

    Problem at kernel boot: 2022-09-27/1664282350801.jpg


    Same problem found on the two available cherryBSD versions 
    cheribsd-memstick-arm64-aarch64c-22.05
    cheribsd-memstick-arm64-aarch64c-22.05p1

    from: 

got stuck at:
https://ctsrd-cheri.github.io/cheribsd-getting-started/morello-install/index.html
"You will eventually be prompted to select a terminal emulation type:"

[FAIL] Setup of CheriBSD in morello board from ctsrd-cheri.github.io 

dicotomy:
A) boot cherribsd on qemu emulator. goodbye morello board.
B) Try one of 2 remaining branches: 
   b1) boot gnu/linux and use gnu toolkit 
   b2) boot android

b1 is optimal for building our codebase
A is optimal for abi stability


Choosing A. It is the best route facing the objective of the PoC: testing fat pointers

qemu
====
back to square 1
https://ctsrd-cheri.github.io/cheribsd-getting-started/cover/index.html

CheriBSD can be installed by downloading or building one of two types of disk images:

    Memstick images that boot and automatically run bsdinstall, the FreeBSD installer, which can be used to prepare a filesystem on a disk, and then install CheriBSD onto it. These will typically be used on Arm Morello boards.
    Live images that boot CheriBSD to a login prompt for interactive use. These will typically be used on instruction-set emulators such as QEMU and the Arm Morello FVP, as well as on FPGA.

Interested in live images

Memstick and live images can both be downloaded from the CheriBSD website https://www.cheribsd.org/
circular links

only memstick images are served

Build the OSimage

cheribuild is a Python-based build orchestration tool that is the preferred way to cross-build CheriBSD. It can be checked out from GitHub:
git clone git@github.com:CTSRD-CHERI/cheribuild.git

problem running as root
problem git clone


replaced
git@github.com:CTSRD-CHERI/cheribuild.git
with
https://github.com/CTSRD-CHERI/cheribuild.git

https://www.cl.cam.ac.uk/research/security/ctsrd/cheri/cheribsd.html

Building and running CheriBSD/Morello in QEMU



mm@roston:~/DSbD/cheribuild$ ./cheribuild.py --include-dependencies qemu
Checking /home/mm/.config/cheribuild.json since /home/mm/DSbD/cheribuild/cheribuild.json doesn't exist
Note: Configuration file /home/mm/.config/cheribuild.json does not exist, using only command line arguments.
Sources will be stored in /home/mm/cheri
Build artifacts will be stored in /home/mm/cheri/output
cd /home/mm/DSbD/cheribuild && git fetch
Fatal error: Dependency for qemu missing: Required library pixman-1 is missing!
Possible solution: Run `apt install libpixman-1-dev`
mm@roston:~/DSbD/cheribuild$ apt-get install libpixman-1-dev


mm@roston:~/DSbD/cheribuild$ ./cheribuild.py --include-dependencies qemu
Checking /home/mm/.config/cheribuild.json since /home/mm/DSbD/cheribuild/cheribuild.json doesn't exist
Note: Configuration file /home/mm/.config/cheribuild.json does not exist, using only command line arguments.
Sources will be stored in /home/mm/cheri
Build artifacts will be stored in /home/mm/cheri/output
cd /home/mm/DSbD/cheribuild && git fetch
Fatal error (in target qemu): Could not find smbd -> QEMU SMB shares networking will not work





===========================================================================================================================================================
26-sep:




    MCC console:    screen /dev/ttyUSB0 115200
    Morello console: screen /dev/ttyUSB2 115200

Cmd> help

Arm M1SDP MCC Firmware v2.3.1
Build Date: May 10 2022
Build Time: 10:26:37

+ command ------------------+ function ---------------------------------+
| CAP "fname" [/A]          | captures serial data to a file            |
|                           |  [/A option appends data to a file]       |
| FILL "fname" [nnnn]       | create a file filled with text            |
|                           |  [nnnn - number of lines, default=1000]   |
| TYPE "fname"              | displays the content of a text file       |
| REN "fname1" "fname2"     | renames a file 'fname1' to 'fname2'       |
| COPY "fin" ["fin2"] "fout"| copies a file 'fin' to 'fout' file        |
|                           |  ['fin2' option merges 'fin' and 'fin2']  |
| DEL "fname"               | deletes a file                            |
| DIR "[mask]"              | displays a list of files in the directory |
| FORMAT [label]            | formats Flash Memory Card                 |
| USB_INIT                  | Re-initialize USB                         |
| USB_ON                    | Enable usb                                |
| USB_OFF                   | Disable usb                               |
| SHUTDOWN                  | Shutdown PSU (leave micro running)        |
| REBOOT                    | Power cycle system and reboot             |
| RESET                     | Reset Board using CB_nRST                 |
| IOFPGA_VERSION            | Displays IOFPGA Version                   |
| DEBUG                     | Enters debug menu                         |
| EEPROM                    | Enters eeprom menu                        |
| HELP  or  ?               | displays this help                        |
|                                                                       |
| THE FOLLOWING COMMANDS ARE ONLY AVAILABLE IN RUN MODE                 |
|                                                                       |
| CASE_FAN_SPEED "SPEED"    | SLOW, MEDIUM, FAST, 0%, 10%, 20%, .. 100% |
| READ_AXI "fname"          | Read system memory to file 'fname'        |
|          "address"        | from address to end address               |
|          "end_address"    |                                           |
| WRITE_AXI "fname"         | Write file 'fname' to system memory       |
|           "address"       | at address                                |
+---------------------------+-------------------------------------------+

[[morello poweron button]]

Arm M1SDP MCC Boot loader v1.0.0
HBI0364 build 535

MCC: Power On

MCC to access SD card request acknowledged.
Clear ULINK JTAG

Time :  08:51:35 
Date :  03:04:2000 

Arm M1SDP MCC Firmware v2.3.1
Build Date: May 10 2022
Cmd> 


*** Cant change neither date nor time
https://ctsrd-cheri.github.io/cheribsd-getting-started/morello-firmware/index.html
Setting the system clock

Change Date? Y\N >y
D:>26
M:>9
Y:>22
Debug> date
05/01/2083

Reflashing the firmware

Cmd> USB_ON
Enabling debug USB...

[[workstation]]
dmesg
[2617538.002880] usb-storage 1-7.3:1.0: USB Mass Storage device detected
[2617538.003247] usb-storage 1-7.3:1.0: Quirks match for vid c251 pid 4003: 80
[2617538.003363] scsi host7: usb-storage 1-7.3:1.0
[2617539.018461] scsi 7:0:0:0: Direct-Access     ARM      M1SDP                 PQ: 0 ANSI: 0
[2617539.019188] sd 7:0:0:0: Attached scsi generic sg2 type 0
[2617539.020074] sd 7:0:0:0: [sdc] 3921920 512-byte logical blocks: (2.01 GB/1.87 GiB)
[2617539.020873] sd 7:0:0:0: [sdc] Write Protect is off
[2617539.020879] sd 7:0:0:0: [sdc] Mode Sense: 03 00 00 00
[2617539.021652] sd 7:0:0:0: [sdc] No Caching mode page found
[2617539.021663] sd 7:0:0:0: [sdc] Assuming drive cache: write through
[2617539.067894]  sdc: sdc1

Already found it mounted at /media/mm/M1SDP

root@roston:~/DSbD# ls /media/mm/M1SDP/ -la
total 260
drwxr-xr-x  6 mm mm 16384 Jan  1  1970  .
drwxrwx---+ 5 mm mm  4096 Sep 26 16:41  ..
-rw-r--r--  1 mm mm  1203 Feb  2  2022  config.txt
-rw-r--r--  1 mm mm   215 Feb  2  2022  ee0364b.txt
drwxr-xr-x  4 mm mm 32768 Feb 14  2022  LICENSES
-rw-r--r--  1 mm mm  1104 Jan  1  2016  LOG.TXT
drwxr-xr-x  3 mm mm 32768 Feb 14  2022  MB
drwxr-xr-x  2 mm mm 32768 Feb 14  2022  SOFTWARE
drwxr-xr-x  2 mm mm 32768 Jun 28 16:18 'System Volume Information'

These are the firmware files already stored in the internal SSD card of the Morello board.

https://git.morello-project.org/morello/board-firmware.git

============================
Automated so far in:
bin/firmware_update
Calling it will upgrade the firmware
============================

Cmd> reboot

Powering up system...

long init ... log1

Change Date? Y\N >y
D:>26
M:>09
Y:>2022
Debug> exit
Cmd> debug
Debug> date
26/09/2022

Change Date? Y\N >n
Debug> time
20 : 28 : 53

Change Time? Y\N >y
s:>0
m:>40
h:>17
Debug> exit
Cmd> debug
Debug> time
17 : 40 : 06

After upgrading the firmware the time and date reset worked! :)

[PASS] Upgrading Morello board firmware from github
[deliver] bin/firmware_update

Following https://ctsrd-cheri.github.io/cheribsd-getting-started/morello-install/index.html
Installing cherribsd on a Morello Board

Automated the task of downloading the image from https://download.cheribsd.org/releases/arm64/aarch64c
22.05/                                             24-May-2022 15:56                   -
22.05p1/                                           08-Jul-2022 21:21 

bin/cherriBSD_stick
producing the file: cheribsd-memstick-arm64-aarch64c-22.05p1.img

dmesg pendrive is sdb: sdb1

dd if=cheribsd-memstick-arm64-aarch64c-22.05p1.img of=/dev/sdb bs=1048576

freeBSD doesnt boot.

2022-09-26/1664220462617.jpg
2022-09-26/1664280845333.jpg
can't find files while configuring modules on kernel load
/boot/entropy
/etc/hostid
No valid device tree blob found

       Install CHERRIBSD OS:
       https://ctsrd-cheri.github.io/cheribsd-getting-started/cover/index.html


===========================================================================================================================================================
20-sep:
    [deliver] Submitted workplan https://github.com/root1m3/morello/blob/main/doc/work_plan_katlas.pdf

===========================================================================================================================================================
19-sep: Added test case:
   test_pointers();
   assert fat pointers have working operators '==' and '!='

===========================================================================================================================================================
18-sep:
   work plan draft

===========================================================================================================================================================
9-sep: unbox Morello board
       learn specs



