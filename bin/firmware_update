#!/bin/bash

#empty: upstream git;
#directory: restore backup. overwrite sdcard with content of the specified directory
#src=""
#src="backup_firm/XXXXX"

upstreamgit="https://git.morello-project.org/morello/board-firmware.git"

function help_mount {
	echo "  plug USB debug cable"
	echo "  Access MCC: screen /dev/ttyUSB0 115200"
	echo "  Mount sdcard: USB_ON"
	echo "  It should be then mounted at $mnt"
}

function help {
    echo "Prerequisite:"
    help_mount
    echo ""
    echo "examples:"
    echo "$0 git"
    echo "      Backs-up current content and"
    echo "      writes the latest version from"
    echo "      $upstreamgit"
    echo ""
    echo "$0 git backup_firm/XXXXX"
    echo "      Backs-up current content and"
    echo "      writes the version found in"
    echo "      backup_firm/XXXXX"
    echo ""
}

if [[ -z $1 ]]; then
    help
    echo "KO 67857 specify source dir or git."
    exit 1
fi

src=$1

# 1.- !src: download latest version from upstream git 
#     src:  points to backup dir

if [[ "_$src" == "_git" ]]; then
    if [[ ! -d board-firmware/.git ]]; then
        echo "downloading board firmware"
        git clone ${upstreamgit}
    else
        echo "pulling changes in board firmware"
        pushd board-firmware > /dev/null
            git pull
        popd
    fi
    src="board-firmware"
else
    if [[ ! -d $src ]]; then
        echo "KO 77869 $src dir doesn't exist."
    fi
fi

# 2.- Verify the sdcard is mounted at /media/mm/M1SDP
mnt="/media/mm/M1SDP"
reltestfile="MB/HBI0364B/board.txt"
testfile="${mnt}/${reltestfile}"
if [[ ! -f ${testfile} ]]; then
    help_mount
	exit 1
fi

# 3.- Backsup content of sd card in directory backup_firm/<timestamp>_<hash of file board.txt>/
ts=`date +%F`
echo "backing up sdcard..."
h0=`sha256sum ${testfile} | awk '{ print $1 }'`
mkdir -p backup_firm/${ts}_${h0}
cp -R ${mnt}/* backup_firm/${ts}_${h0}/
if [[ $? -ne 0 ]]; then
    echo "KO 66985 Can't backup current firmware"
    exit 1
fi

# 4.- Verify Backup integrity by comparing hashes of a file in backup_firm, sdcard
h=`sha256sum backup_firm/${ts}_${h0}/${reltestfile}  | awk '{ print $1 }'`
if [[ "_$h0" != "_$h" ]]; then
    echo "KO 78879 src and dst produce different hashes."
    exit 1
fi
echo "created backup of current sdcard in morello board at backup_firm/${ts}_${h}"

# 5.- Verify sdcard and src have different versions
nh=`sha256sum ${src}/${reltestfile} | awk '{ print $1 }'`
if [[ "_$nh" == "_$h" ]]; then
    cat ${src}/${reltestfile}
    echo "KO 78819 it seems the host has already this version"
    exit 1
fi

# 6.- replacing content of sdcard using src
echo "#################################################"
echo "Overwiting sdcard."
echo "sdcard at $mnt"
echo "backed up in: backup_firm/${ts}_${h0}"
echo "new content from: $src"
echo "#################################################"
echo "yes?"
read a
echo "deleting old firmware in sdcard"
rm -rf ${mnt}/*
echo "copying new firmware in sdcard"
cp -R ${src}/* ${mnt}/
if [[ $? -ne 0 ]]; then
    echo "KO 78873 Error overwritting sdcard."
    exit 1
fi
echo "syncing"
sync

echo "done!."
echo "umount $mnt"
echo "When done, you must unmount the mounted filesystem (USB_OFF) to ensure that all blocks in your workstation's filesystem buffer cache have been written back, and to avoid concurrent accesses leading to possible filesystem corruption. This must be done before issuing the MCC reboot command."
exit 0

